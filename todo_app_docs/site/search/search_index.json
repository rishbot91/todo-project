{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Todo App Documentation This project is a web-based To-Do List application backend, implemented using Django and Django REST Framework. It provides APIs for managing tasks with functionality to create, update, delete, and view tasks. The app supports user authentication and has a CI/CD pipeline for testing and deployment.","title":"Home"},{"location":"#todo-app-documentation","text":"This project is a web-based To-Do List application backend, implemented using Django and Django REST Framework. It provides APIs for managing tasks with functionality to create, update, delete, and view tasks. The app supports user authentication and has a CI/CD pipeline for testing and deployment.","title":"Todo App Documentation"},{"location":"cicd/","text":"CI/CD Pipeline The project uses GitHub Actions for CI/CD to automate testing, linting, and deployment. Actions Included Run Tests: Unit, Integration, and E2E tests. Lint Code: Code is linted using flake8 and formatted using black. Deployment: Automatic deployment to PythonAnywhere. The workflow file is located at .github/workflows/django-ci-cd.yml .","title":"CI/CD"},{"location":"cicd/#cicd-pipeline","text":"The project uses GitHub Actions for CI/CD to automate testing, linting, and deployment.","title":"CI/CD Pipeline"},{"location":"cicd/#actions-included","text":"Run Tests: Unit, Integration, and E2E tests. Lint Code: Code is linted using flake8 and formatted using black. Deployment: Automatic deployment to PythonAnywhere. The workflow file is located at .github/workflows/django-ci-cd.yml .","title":"Actions Included"},{"location":"create_todo/","text":"Create a Todo Item This endpoint allows you to create a new todo item. Endpoint URL: /api/todos/ Method: POST Request Body Provide the details of the todo item to be created: { \"title\": \"New Task\", \"description\": \"Details about the task.\", \"due_date\": \"2024-12-10T10:00:00Z\", \"tags\": [ {\"name\": \"Work\"}, {\"name\": \"Urgent\"} ], \"status\": \"OPEN\" } title (string, required): The title of the task. description (string, required): Detailed description of the task. due_date (string, optional): The deadline for the task in ISO 8601 format. tags (list, optional): A list of tags associated with the task. status (string, required): The status of the task. Valid values are: OPEN WORKING PENDING REVIEW COMPLETED OVERDUE CANCELLED Response Success (201 Created): { \"id\": 1, \"timestamp\": \"2024-12-06T12:00:00Z\", \"title\": \"New Task\", \"description\": \"Details about the task.\", \"due_date\": \"2024-12-10T10:00:00Z\", \"tags\": [ {\"id\": 1, \"name\": \"Work\"}, {\"id\": 2, \"name\": \"Urgent\"} ], \"status\": \"OPEN\" } Errors Bad Request (400): Missing required fields. Invalid status or due date in the past. Example: { \"error\": \"Due date cannot be in the past.\" }","title":"Create Todo"},{"location":"create_todo/#create-a-todo-item","text":"This endpoint allows you to create a new todo item.","title":"Create a Todo Item"},{"location":"create_todo/#endpoint","text":"URL: /api/todos/ Method: POST","title":"Endpoint"},{"location":"create_todo/#request-body","text":"Provide the details of the todo item to be created: { \"title\": \"New Task\", \"description\": \"Details about the task.\", \"due_date\": \"2024-12-10T10:00:00Z\", \"tags\": [ {\"name\": \"Work\"}, {\"name\": \"Urgent\"} ], \"status\": \"OPEN\" } title (string, required): The title of the task. description (string, required): Detailed description of the task. due_date (string, optional): The deadline for the task in ISO 8601 format. tags (list, optional): A list of tags associated with the task. status (string, required): The status of the task. Valid values are: OPEN WORKING PENDING REVIEW COMPLETED OVERDUE CANCELLED","title":"Request Body"},{"location":"create_todo/#response","text":"","title":"Response"},{"location":"create_todo/#success-201-created","text":"{ \"id\": 1, \"timestamp\": \"2024-12-06T12:00:00Z\", \"title\": \"New Task\", \"description\": \"Details about the task.\", \"due_date\": \"2024-12-10T10:00:00Z\", \"tags\": [ {\"id\": 1, \"name\": \"Work\"}, {\"id\": 2, \"name\": \"Urgent\"} ], \"status\": \"OPEN\" }","title":"Success (201 Created):"},{"location":"create_todo/#errors","text":"","title":"Errors"},{"location":"create_todo/#bad-request-400","text":"Missing required fields. Invalid status or due date in the past. Example: { \"error\": \"Due date cannot be in the past.\" }","title":"Bad Request (400):"},{"location":"delete_todo/","text":"Delete a Todo Item This endpoint deletes a specific todo item. Endpoint URL: /api/todos/<task_id>/ Method: DELETE Response Success (204 No Content): No body is returned. The todo item is successfully deleted. Errors Not Found (404): If the specified task_id does not exist: { \"error\": \"Todo item not found.\" }","title":"Delete Todo"},{"location":"delete_todo/#delete-a-todo-item","text":"This endpoint deletes a specific todo item.","title":"Delete a Todo Item"},{"location":"delete_todo/#endpoint","text":"URL: /api/todos/<task_id>/ Method: DELETE","title":"Endpoint"},{"location":"delete_todo/#response","text":"","title":"Response"},{"location":"delete_todo/#success-204-no-content","text":"No body is returned. The todo item is successfully deleted.","title":"Success (204 No Content):"},{"location":"delete_todo/#errors","text":"","title":"Errors"},{"location":"delete_todo/#not-found-404","text":"If the specified task_id does not exist: { \"error\": \"Todo item not found.\" }","title":"Not Found (404):"},{"location":"deployment/","text":"Deployment Hosting on PythonAnywhere Create a PythonAnywhere Account. Set Up Virtual Environment: Upload your project and set up a virtual environment. Configure WSGI: Update the WSGI file to point to your wsgi.py . Reload Application: Reload the application after deployment. Access hosted app at: [https://brishabh91.pythonanywhere.com]","title":"Deployment"},{"location":"deployment/#deployment","text":"","title":"Deployment"},{"location":"deployment/#hosting-on-pythonanywhere","text":"Create a PythonAnywhere Account. Set Up Virtual Environment: Upload your project and set up a virtual environment. Configure WSGI: Update the WSGI file to point to your wsgi.py . Reload Application: Reload the application after deployment. Access hosted app at: [https://brishabh91.pythonanywhere.com]","title":"Hosting on PythonAnywhere"},{"location":"installation/","text":"Installation Prerequisites Python 3.11+ Pip (Python Package Manager) Virtualenv Git Steps to Install Clone the repository: git clone https://github.com/rishbot91/todo-project.git cd todo_project Set up a virtual environment: python -m venv env source env/bin/activate # For Linux/Mac env\\Scripts\\activate # For Windows Install dependencies: pip install -r requirements.txt Apply migrations: python manage.py migrate Create a superuser: python manage.py createsuperuser Run the development server: python manage.py runserver Access the app at http://127.0.0.1:8000/","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#prerequisites","text":"Python 3.11+ Pip (Python Package Manager) Virtualenv Git","title":"Prerequisites"},{"location":"installation/#steps-to-install","text":"Clone the repository: git clone https://github.com/rishbot91/todo-project.git cd todo_project Set up a virtual environment: python -m venv env source env/bin/activate # For Linux/Mac env\\Scripts\\activate # For Windows Install dependencies: pip install -r requirements.txt Apply migrations: python manage.py migrate Create a superuser: python manage.py createsuperuser Run the development server: python manage.py runserver Access the app at http://127.0.0.1:8000/","title":"Steps to Install"},{"location":"overview/","text":"API Overview Base URL: http://127.0.0.1:8000/api/ Endpoints Create a Task Method: POST URL: /todos/ Body: { \"title\": \"New Task\", \"description\": \"Complete this task\", \"due_date\": \"2024-12-10T10:00:00Z\", \"tags\": [{\"name\": \"Work\"}, {\"name\": \"Urgent\"}], \"status\": \"OPEN\" }","title":"Overview"},{"location":"overview/#api-overview","text":"Base URL: http://127.0.0.1:8000/api/","title":"API Overview"},{"location":"overview/#endpoints","text":"","title":"Endpoints"},{"location":"overview/#create-a-task","text":"Method: POST URL: /todos/ Body: { \"title\": \"New Task\", \"description\": \"Complete this task\", \"due_date\": \"2024-12-10T10:00:00Z\", \"tags\": [{\"name\": \"Work\"}, {\"name\": \"Urgent\"}], \"status\": \"OPEN\" }","title":"Create a Task"},{"location":"testing/","text":"Testing Unit Tests Run unit tests: coverage run --source='.' --omit='manage.py,config/asgi.py,config/wsgi.py,todo_app/tests/test_e2e/*,todo_app/tests/test_integration/*' manage.py test todo_app.tests.test_unit Unit test coverage coverage report -m coverage html -d covhtml_unit Integration tests: Run integration tests: coverage run --source='.' --omit='manage.py,config/asgi.py,config/wsgi.py,todo_app/tests/test_e2e/*,todo_app/tests/test_unit/*' manage.py test todo_app.tests.test_integration Integration test coverage coverage report -m coverage html -d covhtml_integration","title":"Testing"},{"location":"testing/#testing","text":"","title":"Testing"},{"location":"testing/#unit-tests","text":"","title":"Unit Tests"},{"location":"testing/#run-unit-tests","text":"coverage run --source='.' --omit='manage.py,config/asgi.py,config/wsgi.py,todo_app/tests/test_e2e/*,todo_app/tests/test_integration/*' manage.py test todo_app.tests.test_unit","title":"Run unit tests:"},{"location":"testing/#unit-test-coverage","text":"coverage report -m coverage html -d covhtml_unit","title":"Unit test coverage"},{"location":"testing/#integration-tests","text":"","title":"Integration tests:"},{"location":"testing/#run-integration-tests","text":"coverage run --source='.' --omit='manage.py,config/asgi.py,config/wsgi.py,todo_app/tests/test_e2e/*,todo_app/tests/test_unit/*' manage.py test todo_app.tests.test_integration","title":"Run integration tests:"},{"location":"testing/#integration-test-coverage","text":"coverage report -m coverage html -d covhtml_integration","title":"Integration test coverage"},{"location":"update_todo/","text":"Update a Todo Item This endpoint allows updating the details of an existing todo item. Endpoint URL: /api/todos/<task_id>/ Method: PUT Request Body Provide the updated details for the todo item: { \"title\": \"Updated Task\", \"description\": \"Updated details about the task.\", \"due_date\": \"2024-12-15T10:00:00Z\", \"tags\": [ {\"name\": \"Work\"}, {\"name\": \"Updated\"} ], \"status\": \"WORKING\" } All fields are optional but at least one must be provided for the update. Response Success (200 OK): { \"id\": 1, \"timestamp\": \"2024-12-06T12:00:00Z\", \"title\": \"Updated Task\", \"description\": \"Updated details about the task.\", \"due_date\": \"2024-12-15T10:00:00Z\", \"tags\": [ {\"id\": 1, \"name\": \"Work\"}, {\"id\": 3, \"name\": \"Updated\"} ], \"status\": \"WORKING\" } Errors Not Found (404): If the specified task_id does not exist: Copy code { \"error\": \"Todo item not found.\" } Bad Request (400): For invalid inputs like a due date in the past: { \"error\": \"Due date cannot be in the past.\" }","title":"Update Todo"},{"location":"update_todo/#update-a-todo-item","text":"This endpoint allows updating the details of an existing todo item.","title":"Update a Todo Item"},{"location":"update_todo/#endpoint","text":"URL: /api/todos/<task_id>/ Method: PUT","title":"Endpoint"},{"location":"update_todo/#request-body","text":"Provide the updated details for the todo item: { \"title\": \"Updated Task\", \"description\": \"Updated details about the task.\", \"due_date\": \"2024-12-15T10:00:00Z\", \"tags\": [ {\"name\": \"Work\"}, {\"name\": \"Updated\"} ], \"status\": \"WORKING\" } All fields are optional but at least one must be provided for the update.","title":"Request Body"},{"location":"update_todo/#response","text":"","title":"Response"},{"location":"update_todo/#success-200-ok","text":"{ \"id\": 1, \"timestamp\": \"2024-12-06T12:00:00Z\", \"title\": \"Updated Task\", \"description\": \"Updated details about the task.\", \"due_date\": \"2024-12-15T10:00:00Z\", \"tags\": [ {\"id\": 1, \"name\": \"Work\"}, {\"id\": 3, \"name\": \"Updated\"} ], \"status\": \"WORKING\" }","title":"Success (200 OK):"},{"location":"update_todo/#errors","text":"","title":"Errors"},{"location":"update_todo/#not-found-404","text":"If the specified task_id does not exist: Copy code { \"error\": \"Todo item not found.\" }","title":"Not Found (404):"},{"location":"update_todo/#bad-request-400","text":"For invalid inputs like a due date in the past: { \"error\": \"Due date cannot be in the past.\" }","title":"Bad Request (400):"},{"location":"view_todos/","text":"View All Todos This endpoint retrieves all todo items. Endpoint URL: /api/todos/ Method: GET Response Success (200 OK): [ { \"id\": 1, \"timestamp\": \"2024-12-06T12:00:00Z\", \"title\": \"First Task\", \"description\": \"Details about the first task.\", \"due_date\": \"2024-12-10T10:00:00Z\", \"tags\": [ {\"id\": 1, \"name\": \"Work\"} ], \"status\": \"OPEN\" }, { \"id\": 2, \"timestamp\": \"2024-12-07T12:00:00Z\", \"title\": \"Second Task\", \"description\": \"Details about the second task.\", \"due_date\": \"2024-12-11T10:00:00Z\", \"tags\": [], \"status\": \"WORKING\" } ] Each object in the array represents a single todo item.","title":"View Todos"},{"location":"view_todos/#view-all-todos","text":"This endpoint retrieves all todo items.","title":"View All Todos"},{"location":"view_todos/#endpoint","text":"URL: /api/todos/ Method: GET","title":"Endpoint"},{"location":"view_todos/#response","text":"","title":"Response"},{"location":"view_todos/#success-200-ok","text":"[ { \"id\": 1, \"timestamp\": \"2024-12-06T12:00:00Z\", \"title\": \"First Task\", \"description\": \"Details about the first task.\", \"due_date\": \"2024-12-10T10:00:00Z\", \"tags\": [ {\"id\": 1, \"name\": \"Work\"} ], \"status\": \"OPEN\" }, { \"id\": 2, \"timestamp\": \"2024-12-07T12:00:00Z\", \"title\": \"Second Task\", \"description\": \"Details about the second task.\", \"due_date\": \"2024-12-11T10:00:00Z\", \"tags\": [], \"status\": \"WORKING\" } ] Each object in the array represents a single todo item.","title":"Success (200 OK):"}]}